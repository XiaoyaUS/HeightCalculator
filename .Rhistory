library(msme)
data(titanicgrp)
glmlr <- glm(survive ~ age + sex + factor(class) + offset(log(cases)),
family=poisson, data=titanicgrp)
summary(glmlr)
exp(coef(glmlr))
lcases <- titanicgrp$cases
nb2o <- nbinomial(survive ~ age + sex + factor(class),
formula2 =~ age + sex,
offset = lcases,
mean.link="log",
scale.link="log_s",
data=titanicgrp)
summary(nb2o)
exp(coef(nb2o))
library(MASS)
install.packages("msme")
data(titanicgrp)
library(msme)
data(titanicgrp)
data(titanic)
titanic$survival <- titanic$survived == "yes"
glmlr <- glm(survival ~ age + sex + factor(class), family=binomial, data=titanic)
summary(glmlr)
glmlr <- glm(survival ~ age + sex + factor(class), family=binomial, data=titanic)
str
(titanic)
head(tatinic)
head (titanic)
library(MASS)
library(msme)
data(titanic)
head (titanic)
glmlr <- glm(survive ~ age + sex + factor(class) + offset(log(cases)),
family=poisson, data=titanic)
glmlr <- glm(survived ~ age + sex + factor(class) + offset(log(cases)),
family=poisson, data=titanic)
titanic$survival <- titanic$survived ==1
glmlr <- glm(survival ~ age + sex + factor(class), family=binomial, data=titanic)
summary(glmlr)
confint(glmlr)
predict(glmlr)
anova(glmlr)
plot(glmlr)
plot(titanic)
summary(glmlr)
anova(glmlr)
?summary
coef(glmlr)
confint(glmlr)
exp(coef(glmlr))
head (titanic)
str(titanic)
newdata <- data.frame(age=5, sex=1, class=1 )
newdata$P <- predict(glmlr, data=newdata, type="response")
newdata
newdata <- data.frame(age=5, sex=1, class=factor(1:1316)
)
newdata$P <- predict(glmlr, data=newdata, type="response")
newdata
summary(titanic)
titanic$class <- factor(tatanic$class)
titanic$class <- factor(titanic#class)
)
titanic$class <- factor(titanic$class)
summary(titanic)
glmlr <- glm(survival ~ age + sex + class, family=binomial, data=titanic)
summary(glmlr)
newdata <- data.frame(age=10, sex=1, class=1)
newdata$class <- factor(newdata$class)
newdata$P <- predict(glmlr, data=newdata, type="response")
newdata <- data.frame(age=10, sex=1, class =1:3)
newdata$class <- factor(newdata$class)
newdata$P <- predict(glmlr, data=newdata, type="response")
data
newdata
head(titanic)
titanics <- titanic[,2:5]
head(titanics)
glmlr <- glm(survival ~ age + sex + class, family=binomial, data=titanics)
newdata$P <- predict(glmlr, data=newdata, type="response")
testdata <- titanics[10:50,]
head(testdata)
testdata$P <- predict(glmlr, data=testdata, type="response")
summary(titanic)
testdata
??titanic
str(Titanic)
head(Titanic)
names(Titanic)
dim(Titanic)
length(Titanic)
Titanic
require(graphics)
mosaicplot(Titanic, main = "Survival on the Titanic"
)
??Titanic
apply(Titanic, c(3, 4), sum)
apply(Titanic, c(2, 4), sum)
??loglm
??glm
Titanic
tatinic
titanic
data(titanic)
names(titanic)
summary(titanic)
?titanic
str(titanic)
glm.lr <- glm(survived ~ age + sex + factor(class),
family=binomial, data=titanic)
summary(glm.lr)
exp(coef(glm.lr))
glm.irls <- irls(survived ~ age + sex + factor(class),
family = "binomial",
link = "cloglog",
data = titanic)
summary(glm.irls)
exp(coef(glm.irls))
library(caret)
data(titanic)
??survival
head(titanic)
modRF <- train(Survived ~ ., data=titanic, methos='rf')
modRF <- train(survived~ ., data=titanic, methos='rf')
pred <- predict(modRF,titanic)
pred
save(modRF, file = ".modRF")
pred <- as.integer(pred > 0.5)
conf <- confusionMatrix(titanic$survived, pred)
conf
?titanic
glm.lr <- glm(survived ~ age + sex + factor(class),
family=binomial, data=titanic)
summary(glm.lr)
exp(coef(glm.lr))
exp(0.9/0.1)
log(1)
log(0)
exp(1)
exp(1)
predglm <- predict(glm.lr,titanic)
predglm <- as.integer(predglm > 0.5)
conf <- confusionMatrix(titanic$survived, predglm)
coef
conf
conf <- confusionMatrix(titanic$survived, predglm)
conf
getwd()
library(shiny)
runApp("HelloShiny")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
library(shiny)
library(shiny)
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
?selectInput
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
?numericInput
runApp("Height")
runApp("Height")
runApp("Height")
reload
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
?actionButton
?submitButton
runApp("Height")
runApp("Height")
runApp("Height")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='xiaoyaus', token='5082CD1DCBEA4BC567C2D7FA99F3B789', secret='yPRwEMEqzX4O8UjB208HWcZO+FiaCmC6ltQFlfUo')
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
?galton
data(father.son)
plot(sheight ~ fheight, data=father.son,bty="l",pch=20)
?father.son
data(father.son)
## like cover of Freedman, Pisani, and Purves
plot(sheight ~ fheight, data=father.son,bty="l",pch=20)
abline(a=0,b=1,lty=2,lwd=2)
abline(lm(sheight ~ fheight, data=father.son),lty=1,lwd=2)
?galton
sunflowerplot(galton)
plot(galton$parent,galton$child,pch=19,col="blue")
lm1 <- lm(galton$child ~ galton$parent)
lines(galton$parent,lm1$fitted,col="red",lwd=3)
sunflowerplot(galton)
alines(galton$parent,lm1$fitted,col="red",lwd=3)
abline(galton$parent,lm1$fitted,col="red",lwd=3)
?galton
?lm
with(Galton,
{
sunflowerplot(parent,child, xlim=c(62,74), ylim=c(62,74))
reg <- lm(child ~ parent)
abline(reg)
})
sunflowerplot(galton)
reg <- lm(child ~ parent, data=galton)
abline(reg)
sunflowerplot(child,parent,xlim=c(62,74), ylim=c(62,74), data=galton)
?sunflowerplot
sunflowerplot(galton$parent, galton$child, xlim=c(62,74), ylim=c(62,74));
reg <- lm(child ~ parent, data=galton)
abline(reg)
summary(reg)
unflowerplot(galton$parent, galton$child, xlim=c(0,74, ylim=c(0,74));
sunflowerplot(galton$parent, galton$child, xlim=c(0,74, ylim=c(0,74));
sunflowerplot(galton$parent, galton$child, xlim=c(0,74, ylim=c(0,74))
)
sunflowerplot(galton$parent, galton$child, xlim=c(62,74), ylim=c(62,74))
reg <- lm(child ~ parent, data=galton)
abline(reg)
head(galton)
str(galton)
?predict
p <- ( 65*1.08 + 75)/2
p
c <- predict(reg, data.frame(parent=p))
c
c <- 23.94153 + 0.64629 * 72.6
c
sunflowerplot(galton$parent, galton$child, xlim=c(62,74), ylim=c(62,74))
reg <- lm(child ~ parent, data=galton)
?abline
require(stats)
sale5 <- c(6, 4, 9, 7, 6, 12, 8, 10, 9, 13)
plot(sale5)
?abline
plot(cars)
abline
?abline
z <- lm(dist ~ speed, data = cars)
plot(cars)
abline(z) # equivalent to abline(reg = z) or
abline(coef = coef(z))
abline(z)
abline(coef = coef(z))
sunflowerplot(galton$parent, galton$child, xlim=c(62,74), ylim=c(62,74))
fit <- lm(child ~ parent, data=galton)
abline(fit)
abline(coef = coef(fit))
sunflowerplot(galton$parent, galton$child, xlim=c(62,74), ylim=c(62,74))
abline(coef = coef(fit))
sunflowerplot(galton$parent, galton$child, xlim=c(62,74), ylim=c(62,74))
mdLm <-  lm(child ~ parent, data=galton)
abline(mdLm)
with(Galton,
{
sunflowerplot(parent,child, xlim=c(62,74), ylim=c(62,74))
reg <- lm(child ~ parent)
abline(reg)
})
with(Galton,
{
sunflowerplot(parent,child, xlim=c(62,74), ylim=c(62,74))
reg <- lm(child ~ parent)
abline(reg)
lines(lowess(parent, child), col="blue", lwd=2)
if(require(car)) {
dataEllipse(parent,child, xlim=c(62,74), ylim=c(62,74), plot.points=FALSE)
}
})
?sunflowerplot
sunflowerplot(galton$parent, galton$child, xlim=c(62,74), ylim=c(62,74), xlab="Parent' Height in inches", ylab="Child's Height in inches")
abline(reg)
sunflowerplot(parent,child, xlim=c(62,74), ylim=c(62,74))
with(Galton,
{
sunflowerplot(parent,child, xlim=c(62,74), ylim=c(62,74))
reg <- lm(child ~ parent)
abline(reg)
})
sunflowerplot(galton)
sunflowerplot(galton$parent, galton$child, xlim=c(62,74), ylim=c(62,74), xlab="Parent' Height in inches", ylab="Child's Height in inches")
mdLm <-  lm(child ~ parent, data=galton)
abline(mdLm)
titanic
head(cars)
sumary(cars)
summary(cars)
str(cars)
library(UsingR)
titanic
library(MASS)
head(titanic)
hea(Titanic)
library(msme)
data(titanic)
glmlr <- glm(survived ~ age + sex + factor(class), family=binomial, data=titanic)
str(titanic)
class(titanic)
data(Titanic)
str(Titanic)
r <- ftable(Titanic, row.vars = 1:3)
as.data.frame(r)
tempr <- as.data.frame(r)
head(titanic)
tail(titanic)
?predict
x <- rnorm(15)
y <- x + rnorm(15)
plot(y,x)
plot(x,y)
?predict
new <- data.frame(x = seq(-3, 3, 0.5))
plot(new)
?predict
predict(lm(y ~ x), new)
lenght(new)
lengh(new)
dim(new)
new <- data.frame(x =5)
predict(lm(y ~ x), new)
summary(lm(y ~ x))
y=-0.1365 + 1.4853*5
y
round(59.1234, 2)
round(59.1234,0)
round(1000.34,0)
dim(galton)
?galton
?lm
summary(mdLm)
residualplot(mdLm)
residualPlots(mdLm)
plot(galton$child, mdLm$fit)
mdLm$fit
galton$child-mdLm$fit
plot(galton$parent, galton$child)
hist(galton$child-mdLm$fit)
runApp("Height")
runApp("Height")
runApp("Height")
x = 1:10
y = x^2
name = letters[1:10]
plot(x, y)
identify(x, y, labels = name, plot=TRUE)
runApp("Height")
library(shiny)
runApp("Height")
library(UsingR)
data(galton)
? if
}
??if
c
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
?sunflowerplot
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
?plot
runApp("Height")
runApp("Height")
runApp("Height")
?sunflowerplot
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
runApp("Height")
?galton
dim(galton)
runApp("Height")
runApp("Height")
shinyapps::setAccountInfo(name='xiaoyaus', token='5082CD1DCBEA4BC567C2D7FA99F3B789', secret='yPRwEMEqzX4O8UjB208HWcZO+FiaCmC6ltQFlfUo')
getwd()
library(shiny)
runApp("Height")
shinyapps::setAccountInfo(name='xiaoyaus', token='5082CD1DCBEA4BC567C2D7FA99F3B789', secret='yPRwEMEqzX4O8UjB208HWcZO+FiaCmC6ltQFlfUo')
shinyapps::deployApp('/home/xzhu/DataScience2015/DevelopingDataProducts/Height')
library(devtools)
install_github("Slidify", "ranmathv")
install_github("slidify", "ranmathv")
install_github("ranmathv/slidifyy")
?slidify
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
getwd()
library(slidify)
author("HeightCalculator")
getwd()
slidify("index.Rmd")
library(knitr)
browseURL("index.html")
browseURL('index.html')
slidify("index.Rmd")
library(knitr)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
getwd
getwd()
